1如何对流量进行实时的转发？
解决方案：我们使用自定义的mitmproxy中间件，对请求流量的request进行实时的全量复制，并编辑复制流量请求的http代理，以达到指定转发的目地。
从方案可知我们是通过代理来转发的，所以目前只支持通过透明代理访问的流量转发对比，
后续可以借助mitmproxy自身的透明代理模式，通过docker runtime实时创建容器的方式，对通过host访问的请求进行转发对比。

2对比服务器的流量如何与目标服务的流量进行关联的？
解决方案：在复制流量的中间件中，执行流量复制转发操作时，根据复制来源的id，生成一个头信息保存。后续解析列表数据时，根据这个来源id，进行关联对比。

3操作数据大时，对比性能如何优化？
解决方案：目前采用socket实时对比+定时器刷新的方式，双重保障流量对比的业务流程准确性。
同时前端采用虚表设计，只对状态更新了的数据进行强制渲染更新，保障页面性能。
不过被测服务器返回的响应效率是不可控的，会存在秒级的响应延迟。不建议进行无针对性的对比测试，这样很难找到关注的重点，也不易发现问题。