1多任务不同的配置需求如何隔离？
解决方案：在系统首次启动前，需先执行已经封装的DockerFile，创建我们所需的基础镜像。
系统通过docker service，根据任务配置的信息（host、代理等），创建docker容器。
实际此时的docker镜像，已经封装了容器运行时所需的工具和基本的配置。
每个容器创建挂载在各自独立的端口下，以达到隔离。

2如何获取实时流量日志？
解决方案：容器中的mitmproxy有多种启动方式，各有不同的使用场景，
其中mitmweb方式启动的代理会有一个socket服务，通过对该接口的自定义开发，让其支持我们的跨域连接，
并解析其报文信息，再通过前端渲染，即可达到实时日志的展现功能。

3日志太多界面卡死怎么办？
解决方案：日志内容大小最好根据实际的使用场景做限制，同时前端采用虚拟列表，只渲染在可视区域及少量即将可视的DOM数据，根据数据长度计算容器的高度。
可以自己写组件去创建、销毁Dom，本系统中使用的是结合react-virtualized和antd的virtualizedtableforantd4组件，这样做到日志展示模块的稳定与性能优化。

4流量生成用例时，数据量很大怎么处理？
解决方案：对于大量数据的录制用例，在生成用例时，会根据勾选的流量ID，通过请求传值给自定义的dump接口，生成可以用于回放的dump文件并保存。
同时为了便于前台展示，和后续的编辑，流量需要入库到用例表。数据量超过限制大小时，后台会舍弃部分冗余字段值，切片入库，保证系统的稳定性。

5https流量如何处理？
解决方案：https流量需要通过安装mitmproxy的中间人证书，才能解析获取。
这里有个注意点，安卓移动设备6.0后，无法通过伪造证书去解析https。
简单的做法是，拿到服务器证书，用openssl生成pem证书。
在系统中针对项目进行pem证书的配置，当该项目的代理启动时，以此证书去解析指定域名的https请求，这样就是解决所有来源请求的https数据了。